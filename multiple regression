%matplotlib inline

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import scipy as sp

import scipy.stats as sps

d1 = pd.read_csv('divorce.csv')
d1.head()

import statsmodels.formula.api as smf
import statsmodels.api as sm

multi_regression_model_1 = smf.ols(formula='rate ~ time + GDP + unem + ED',data=d1).fit()

# And this gives a big summary of the results:
print(multi_regression_model_1.summary())

fig = plt.figure(figsize=(10,8))
fig = sm.graphics.plot_regress_exog(multi_regression_model_1, 'unem', fig=fig)
plt.savefig("residual.jpg")



#######Correlation coefficient

df = data[['time','GDP','unem','rural','ED']]
plt.rcParams["axes.grid"] = False
f = plt.figure(figsize=(7, 7))
plt.matshow(df.corr(), fignum=f.number)
plt.xticks(range(df.shape[1]), df.columns, fontsize=13, rotation=45)
plt.yticks(range(df.shape[1]), df.columns, fontsize=13)
#cb = plt.colorbar()
cb.ax.tick_params(labelsize=7)
plt.title('Correlation Matrix', fontsize=12)
hm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 12}, yticklabels=cols.values, xticklabels=cols.values)
plt.savefig("heat.jpg")
